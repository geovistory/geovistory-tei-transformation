<?xml-model href="teipublisher_odds.xsd"?>

<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>AMPI journal ODD</title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl>
                <pb:behaviour ident="glossary" output="latex">
                    <pb:param name="id" value="@xml:id"/>
                    <pb:param name="name"/>
                    <pb:param name="note"/>
                    <pb:template xmlns="" xml:space="preserve">\newglossaryentry{[[id]]} {
                        name=[[name]],
                        description={[[note]]}
                        }</pb:template>
                </pb:behaviour>
            </tagsDecl>
        </encodingDesc>
        <revisionDesc>
            <change when="2021-12-31+01:00">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="ampi_tagebuch" source="teipublisher.odd"> 
            
            <elementSpec mode="change" ident="rs">
        <!--      Vérifier si utile      -->
<!--                <model output="latex" behaviour="inline">-->
<!--                    <param name="id" value="substring-after(@ref, '#')"/>-->
<!--                    <pb:template xmlns="" xml:space="preserve">\glslink{[[id]]}{[[content]]}</pb:template>-->
<!--                </model>-->

                <!-- Cette partie crée l'index -->
                <model predicate="$parameters?mode='facets' and @type='person'" behaviour="webcomponent">
                    <param name="name" value="'pb-highlight'"/>
                    <param name="content" value="id(substring-after(@ref, '#'), root($parameters?root))"/>
                    <param name="key" value="substring-after(@ref, '#')"/>
                    <param name="subscribe" value="'letter'"/>
                    <param name="emit" value="'facets'"/>
                    <outputRendition xml:space="preserve">
                       display: block;
                    </outputRendition>
                </model>
                
                <model predicate="@type='person' and id(substring-after(@ref, '#'), root($parameters?root))" behaviour="webcomponent">
                    <param name="name" value="'pb-highlight'"/>
                    <param name="content" value="."/>
                    <param name="key" value="substring-after(@ref, '#')"/>
                    <param name="scroll" value="true()"/>
                    <param name="emit" value="'letter'"/>
                    <param name="subscribe" value="'facets'"/>
                    <param name="duration" value="3"/>
                    <outputRendition xml:space="preserve">
                        color: #bf360c;
                        cursor: pointer;
                    </outputRendition>
                </model>

               
<!-- Cette partie crée l'index -->
                <model predicate="$parameters?mode='facets' and @type='tag'" behaviour="webcomponent">
                    <param name="name" value="'pb-highlight'"/>
                    <param name="content" value="id(substring-after(@ref, '#'), root($parameters?root))"/>
                    <param name="key" value="substring-after(@ref, '#')"/>
                    <param name="duration" value="3"/>
                    <param name="subscribe" value="'letter'"/>
                    <param name="emit" value="'facets'"/>
                    <outputRendition xml:space="preserve">
                       display: inline;
                    </outputRendition>
                </model>
                
                <model predicate="@type='tag' and id(substring-after(@ref, '#'), root($parameters?root))" behaviour="webcomponent">
                    <param name="name" value="'pb-highlight'"/>
                    <param name="content" value="."/>
                    <param name="key" value="substring-after(@ref, '#')"/>
                    <param name="scroll" value="true()"/>
                    <param name="emit" value="'letter'"/>
                    <param name="subscribe" value="'facets'"/>
                    <outputRendition xml:space="preserve">
                        color: #1E90FF;
                        cursor: pointer;
                    </outputRendition>
                </model>
                
                <model predicate="$parameters?mode='facets' and @type='book_etc'" behaviour="webcomponent">
                    <param name="name" value="'pb-highlight'"/>
                    <param name="content" value="id(substring-after(@ref, '#'), root($parameters?root))"/>
                    <param name="key" value="substring-after(@ref, '#')"/>
                    <param name="subscribe" value="'letter'"/>
                    <param name="emit" value="'facets'"/>
                    <outputRendition xml:space="preserve">
                       display: block;
                    </outputRendition>
                </model>
                
                <model predicate="@type='book_etc' and id(substring-after(@ref, '#'), root($parameters?root))" behaviour="webcomponent">
                    <param name="name" value="'pb-highlight'"/>
                    <param name="content" value="."/>
                    <param name="key" value="substring-after(@ref, '#')"/>
                    <param name="scroll" value="true()"/>
                    <param name="emit" value="'letter'"/>
                    <param name="subscribe" value="'facets'"/>
                    <param name="duration" value="3"/>
                    <outputRendition xml:space="preserve">
                        color: #32CD32;
                        cursor: pointer;
                    </outputRendition>
                </model>
                

                  <model behaviour="inline">
                    <outputRendition>color:#D3D3D3;
                        text-decoration: underline;
                    </outputRendition>
                  </model>

            </elementSpec>
            
            
            <elementSpec ident="person" mode="add">
             <!--<param name="note" value="note"/>-->
<!--                    <model output="latex" behaviour="glossary">-->
<!--                        <param name="name" value="persName"/>-->
<!--                    </model>-->
                    <modelSequence>
                        <model behaviour="heading">
                            <param name="content" value="persName"/>
                            <param name="level" value="4"/>
                            <outputRendition xml:space="preserve">
                            margin-bottom: 0;
                            </outputRendition>
                        </model>
                   </modelSequence>
           </elementSpec>
           
           
           
            <elementSpec ident="object" mode="add">
                
                        <!--<param name="note" value="note"/>-->                    
                        <model predicate="@type='tag'" output="latex" behaviour="glossary">
                        <param name="name" value="objectIdentifier/objectName"/>
                        </model>
                        <model predicate="@type='tag'" behaviour="heading">
<!--                            <param name="content" value="objectIdentifier/objectName"/>-->
                            <param name="content" value="if(string-length(objectIdentifier/objectName/text()) &gt; 50) then (substring(objectIdentifier/objectName/text(),1,50), '...') else (objectIdentifier/objectName/text())"/>
                            <param name="level" value="4"/>
                            <outputRendition xml:space="preserve">
                                margin-bottom: 0;
                            </outputRendition>
                        </model>
                   
                         <!--<param name="note" value="note"/>-->               
<!--                        <model predicate="@type='book_etc'" output="latex"  behaviour="glossary">-->
<!--                            <param name="name" value="(substring(objectIdentifier/objectName,1,11), '...')"/>-->
<!--                        </model>-->
                        
                        <model predicate="@type='book_etc'" behaviour="heading">
<!--                            <param name="content" value="(substring(objectIdentifier/objectName,1,11), '...')"/>-->
                            <param name="content" value="if(string-length(objectIdentifier/objectName/text()) &gt; 100) then (substring(objectIdentifier/objectName/text(),1,100), '...') else (objectIdentifier/objectName/text())"/>
                            <param name="level" value="4"/>
                            <outputRendition xml:space="preserve">
                                margin-bottom: 0;
                            </outputRendition>
                        </model>

           </elementSpec>
           
           
            
            
            
            
            
            <elementSpec ident="body" mode="change">
            
                <modelSequence predicate="$parameters?mode='facets'">
                
                    <model behaviour="heading">
                            <param name="content" value="'Persons'"/>
                            <param name="level" value="2"/>
                            <outputRendition xml:space="preserve">
                            font-weight: 200;
                            border-bottom: 1px solid #A0A0A0;
                            </outputRendition>
                    </model>

                    <model behaviour="section">
                            <param name="content" value="for $n in .//rs[@type='person'] group by $ref := $n/@ref order by $ref return $n[1]"/>
                    </model>
                    
                    <model behaviour="heading">
                            <param name="content" value="'Tags'"/>
                            <param name="level" value="2"/>
                            <outputRendition xml:space="preserve">
                            font-weight: 200;
                            border-bottom: 1px solid #A0A0A0;
                            </outputRendition>
                    </model>
                    
                    <model behaviour="section">
                            <param name="content" value="for $n in .//rs[@type='tag'] group by $ref := $n/@ref order by $ref return $n[1]"/>
                    </model>
                    

                    <model behaviour="heading">
                            <param name="content" value="'Books and Co'"/>
                            <param name="level" value="2"/>
                            <outputRendition xml:space="preserve">
                            font-weight: 200;
                            border-bottom: 1px solid #A0A0A0;
                            </outputRendition>
                    </model>
                    <model behaviour="section">
                            <param name="content" value="for $n in .//rs[@type='book_etc'] group by $ref := $n/@ref order by $ref return $n[1]"/>
                    </model>
                    
                </modelSequence>
                
                <modelSequence>
                        <model behaviour="index">
                            <param name="type" value="'toc'"/>
                        </model>
                        <model behaviour="block"/>
                </modelSequence>
            </elementSpec>
            
            <elementSpec ident="persName" mode="add">
                    <model predicate="parent::person" behaviour="inline"> 
                        <param name="content" value="."/>
                    </model>
                    <model predicate="parent::person" behaviour="inline"/>
                    <model behaviour="alternate">
                        <param name="alternate" value="id(@ref, doc(&#34;/db/apps/tei-publisher/data/register.xml&#34;))"/>
                        <param name="default" value="."/>
                        <outputRendition xml:space="preserve">
                        
                        text-decoration: underline;
                     --pb-popover-theme: 'light';
                        
                        </outputRendition>
                    </model>
                    
            </elementSpec>
            
             <elementSpec ident="date" mode="change">
<!--                    <model output="print" predicate="text()" behaviour="inline"/>-->
<!--                    <model output="print" predicate="@when and not(text())" behaviour="inline">-->
<!--                        <param name="content" value="@when"/>-->
<!--                    </model>-->
                    <model output="web" predicate="@when" behaviour="alternate">
                        <param name="default" value="."/>
                        <param name="alternate" value="format-date(@when, '[FNn], [D1o] [MNn], [Y]')"/>
                    </model>
                    <model predicate="text()" behaviour="inline"/>
                </elementSpec>
           
                
                <elementSpec ident="TEI" mode="change">
                    <model output="latex" behaviour="inline">
                    <param name="glossary" value="(teiHeader//particDesc/listPerson/person)"/>
                    <param name="content" value="text"/>
                    <param name="header" value="teiHeader"/>
<!--                    <param name="date" value="text/body/opener/dateline/date"/>-->
                   
                    <pb:template xmlns="" xml:space="preserve">\documentclass[10pt,a4paper,fromalign=right]{scrlttr2}
        
                                \usepackage[british]{babel}
                                \usepackage{hyperref}
                                \usepackage{glossaries}
                                \makenoidxglossaries
                                
                                \usepackage{fancyhdr}
                                \pagestyle{fancy}
                                
                                \fancyhf{}
                                \fancyhead[LO,RE]{\footnotesize\volume}
                                \fancyfoot[LE,RO]{\footnotesize\thepage}
                                
                                \setkomavar{date}{[[date]]}
                                
                                [[glossary]]
                                
                                \begin{document}
                                
                                [[header]]
                                
                                \begin{letter}
                                [[content]]
                                \end{letter}
                                
                                \printnoidxglossaries
                                
                                \end{document}</pb:template>
                    </model>
                    <model behaviour="document"/>
                </elementSpec>
                
                <elementSpec ident="teiHeader" mode="change">
                    <model output="latex" behaviour="inline">
                        <param name="content" value="(fileDesc/titleStmt/title[not(@type)])"/>
                        <pb:template xmlns="" xml:space="preserve">\def\volume{[[content]]}</pb:template>
                    </model>
                    <model output="fo" behaviour="omit"/>
                    <model output="web" predicate="$parameters?header='short'" behaviour="block"/>
                    <model output="web" behaviour="metadata"/>
            </elementSpec>
        </schemaSpec>    
                
        </body>
    </text>
</TEI>